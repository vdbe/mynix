# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, inputs, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")

      inputs.disko.nixosModules.disko
      (import ./disko.nix { disks = [ "/dev/disk/by-id/ata-KINGSTON_RBUSC180DS37256GH_50026B727301DBA9" ]; })
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "ehci_pci" "usb_storage" "sd_mod" "sdhci_pci" "rtsx_usb_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  #boot.loader.efi.efiSysMountPoint = "/boot/efi";
  #fileSystems."/" =
  #  {
  #    device = "/dev/disk/by-uuid/0fca1ee5-a449-496b-a7e6-f849e3a85674";
  #    fsType = "ext4";
  #  };

  #fileSystems."/boot/efi" =
  #  {
  #    device = "/dev/disk/by-uuid/2A00-5912";
  #    fsType = "vfat";
  #  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

